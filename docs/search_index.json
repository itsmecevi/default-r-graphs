[
["index.html", "101 Default R Graphs Chapter 1 Preface", " 101 Default R Graphs Cevi Herdian 2019-05-15 Chapter 1 Preface Note: -An R Notebook is an R Markdown document with chunks that can be executed independently and interactively, with output visible immediately beneath the input. -Notebook output are available as HTML, PDF, Word, or Latex. -This Notebook as HTML is preferably open with Google Chrome. -R-Code can be extracted as Rmd file under the button “Code” in the notebook. Why R?: Free and open source Built for statistical computing Visualization tools Tools for building Models Learning Objectives: How to create beautiful, useful, and insightful graphics and charts How to customize the look of them All languages have their inconsistencies include R Programming. This documentation helps us to create visualizing in default R graphics before to far away using the packages. Change log update: 18.12.2018 19.12.2018 23.12.2018 24.12.2018 13.05.2019 14.05.2019 15.05.2019 Preferences: R Programming/Graphics Tutorials for learning R RDocumentation Statistical tools for high-throughput data analysis statmethods cognitiveclass.ai-Data Visualization with R Comprehensive Guide to Data Visualization in R datascienceplus Hands-On Programming with R R for Data Science R Markdown: The Definitive Guide R bookdown: Authoring Books and Technical Documents with R Markdown blogdown: Creating Websites with R Markdown License: 101 Default R Graphs is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License. "],
["creating-and-saving-graphs-in-r.html", "Chapter 2 Creating and Saving Graphs in R", " Chapter 2 Creating and Saving Graphs in R Creating graphs: Used mtcars (Motor Trend Car Road Tests from default dataset) dataset for this section: ?mtcars ## starting httpd help server ... done head(mtcars,5) ## mpg cyl disp hp drat wt qsec vs am gear carb ## Mazda RX4 21.0 6 160 110 3.90 2.620 16.46 0 1 4 4 ## Mazda RX4 Wag 21.0 6 160 110 3.90 2.875 17.02 0 1 4 4 ## Datsun 710 22.8 4 108 93 3.85 2.320 18.61 1 1 4 1 ## Hornet 4 Drive 21.4 6 258 110 3.08 3.215 19.44 1 0 3 1 ## Hornet Sportabout 18.7 8 360 175 3.15 3.440 17.02 0 0 3 2 Created a graphs with plot() function: plot(x = mtcars$wt, y = mtcars$mpg, pch = 16, frame = FALSE, xlab = &quot;Weight (1000 lbs)&quot;, ylab = &quot;Miles/(US) gallon&quot;, col = &quot;#2E9FDF&quot;) Saving graphs: There are two ways of saving graphs in R In RStudio IDE: Plots panel -&gt; Export -&gt; Save as Image or Save as PDF #preference:http://www.sthda.com/english/wiki/r-base-graphs Using R codes: Choose the format Create the graphs Enter the dev.off() command Example-&gt; Note: The file you save are in the current working directory. The command to get directory is getwd() # 1. Choose the format png(&quot;rplot.jpg&quot;) #width = 25, height = &quot;25&quot; # 2. Create the graphs plot(x = mtcars$wt, y = mtcars$mpg, pch = 16, frame = FALSE, xlab = &quot;wt&quot;, ylab = &quot;mpg&quot;, col = &quot;#2E9FDF&quot;) # 3. Save the file with dev.off() command in directory dev.off() ## png ## 2 File formats for exporting plots are: pdf(&quot;rplot.pdf&quot;) : pdf file png(&quot;rplot.png&quot;) : png file jpeg(&quot;rplot.jpg&quot;) : jpeg file postscript(&quot;rplot.ps&quot;): postscript file bmp(&quot;rplot.bmp&quot;) : bmp file win.metafile(&quot;rplot.wmf&quot;) : windows metafile "],
["standard-graphical-formatting-in-r.html", "Chapter 3 Standard graphical formatting in R", " Chapter 3 Standard graphical formatting in R Introduction plot() function: plot() function is generic function for plotting of R objects in basic graphs. par() : the default settings (rows x columns) for plots. plot() : the main function. There are many other plot functions which are specific to some tasks such as hist(), boxplot(), etc. Most of them take the same arguments as the plot() function. Formula: plot(x, y, type=“p”) x and y: the coordinates of points to plot type: “p” for points, “l” for lines, “b” for both, “c” for the lines part alone of “b”, “o” for both ‘overplotted’, “h” for ‘histogram’ like (or ‘high-density’) vertical lines, “s” for stair steps, “S” for other steps, see ‘Details’ below, “n” for no plotting. Example: par(mfrow=c(3,3), mar=c(3,3,1,0)+.5, mgp=c(1.6,.6,0)) # set up the graphics x&lt;-1:5; y=x*x plot(x, y, type=&quot;p&quot;,col=&quot;blue&quot;) plot(x, y, type=&quot;l&quot;,col=&quot;bisque&quot;) plot(x,y, type=&quot;b&quot;,col=&quot;green&quot;) plot(x, y, type=&quot;c&quot;,col=&quot;red&quot;) plot(x, y, type=&quot;o&quot;,col=&quot;pink&quot;) plot(x,y, type=&quot;h&quot;,col=&quot;orange&quot;) plot(x, y, type=&quot;s&quot;,col=&quot;purple&quot;) plot(x, y, type=&quot;S&quot;,col=&quot;black&quot;) plot(x,y, type=&quot;h&quot;,col=&quot;blue&quot;) For more color type used the sintaks color() More info about plot() go to RDocumentation here Titles: main=&quot;test&quot;: main titles sub=&quot;text&quot;: subtitle xlab=&quot;test&quot;: the name of the x axis ylab=&quot;test&quot;: the name of the y axis. ====Main title and axis labels==== x&lt;-1:5; y=x*x plot(x, y, type=&quot;p&quot;,col=&quot;blue&quot;,main=&quot;Exponential&quot;,sub=&quot;Example&quot;,ylab=&quot;Y Axis&quot;,xlab=&quot;X Axis&quot;) ====Title colors==== x&lt;-1:5; y=x*x plot(x, y, type=&quot;p&quot;,col=&quot;#B7F200&quot;,main=&quot;Exponential&quot;,sub=&quot;Example&quot;,ylab=&quot;Y Axis&quot;,xlab=&quot;X Axis&quot;, col.main=&quot;red&quot;, col.lab=&quot;blue&quot;, col.sub=&quot;green&quot;) ====The font style==== The possible values for the font style are : 1: normal text 2: bold 3: italic 4: bold and italic 5 : Symbol font x&lt;-1:5; y=x*x plot(x, y, type=&quot;p&quot;,col=&quot;blue&quot;,main=&quot;Exponential&quot;,sub=&quot;Example&quot;,ylab=&quot;Y Axis&quot;,xlab=&quot;X Axis&quot;, font.main=1, font.lab=2, font.sub=3 ) ====The font size==== x&lt;-1:5; y=x*x plot(x, y, type=&quot;p&quot;,col=&quot;blue&quot;,main=&quot;Exponential&quot;,sub=&quot;Example&quot;,ylab=&quot;Y Axis&quot;,xlab=&quot;X Axis&quot;, cex.main=4, cex.lab=1.5, cex.sub=0.8 ) ====Use the title() function==== x&lt;-1:5; y=x*x plot(x, y, type=&quot;p&quot;) title(main = &quot;Main title&quot;, sub = &quot;Sub-title&quot;, xlab = &quot;X&quot;, ylab = &quot;Y&quot;, cex.main = 2, font.main= 4, col.main= &quot;red&quot;, cex.sub = 0.75, font.sub = 2, col.sub = &quot;green&quot;, col.lab =&quot;darkblue&quot; ) ====Customize the titles using par() function==== par( # Change the colors col.main=&quot;red&quot;, col.lab=&quot;blue&quot;, col.sub=&quot;black&quot;, # Titles in italic and bold font.main=4, font.lab=4, font.sub=4, # Change font size cex.main=2, cex.lab=1.7, cex.sub=1.2 ) plot(x, y, type=&quot;p&quot;, main=&quot;TMain title&quot;, xlab=&quot;X axis&quot;, ylab=&quot;Y axis&quot;, sub=&quot;Sub title&quot; ) Legend: legend(): the position can be “bottomleft”, “bottomright”, “topleft”, “topright” or exact coordinates. ====R legend function==== Formula: legend(x, y=NULL, legend, fill, col, bg) Example: # Generate example data x&lt;-1:5; y1=x*x; y2=3*y1 plot(x, y1, type=&quot;b&quot;, pch=19, col=&quot;#FFD900&quot;, xlab=&quot;x&quot;, ylab=&quot;y&quot;) # Add a line lines(x, y2, pch=18, col=&quot;#8C6DD7&quot;, type=&quot;b&quot;, lty=2) # Add a legend legend(1, 20, legend=c(&quot;Line 1&quot;, &quot;Line 2&quot;), col=c(&quot;#FFD900&quot;, &quot;#8C6DD7&quot;), lty=1:2, cex=0.8) Create R function to avoid repeating graphs code: # Generate example data make_plot&lt;-function(){ x&lt;-1:5; y1=x*x; y2=3*y1 plot(x, y1, type=&quot;b&quot;, pch=19, col=&quot;red&quot;, xlab=&quot;x&quot;, ylab=&quot;y&quot;) # Add a line lines(x, y2, pch=18, col=&quot;blue&quot;, type=&quot;b&quot;, lty=2) # Add a legend legend(1, 20, legend=c(&quot;Line 1&quot;, &quot;Line 2&quot;), col=c(&quot;red&quot;, &quot;blue&quot;), lty=1:2, cex=0.8) } make_plot() ====Title, text font and background color of the legend box==== title: The title of the legend text.font: an integer specifying the font style of the legend text; possible values are : 1: normal 2: bold 3: italic 4: bold and italic bg: background color of the legend box make_plot() # Add a legend to the plot legend(1,20, legend=c(&quot;Line 1&quot;, &quot;Line 2&quot;), col=c(&quot;red&quot;, &quot;blue&quot;), lty=1:2, cex=0.8, title=&quot;Line types&quot;, text.font=4, bg=&quot;lightblue&quot;) ====Border of the legend box==== box.lty: modify the line type box.lwd: modify the width box.col: modify the color par(mfrow=c(2,1), mar=c(3,3,1,0)+.5, mgp=c(1.6,.6,0)) # set up the graphics # Remove legend border using box.lty = 0 make_plot() legend(1,20, legend=c(&quot;Line 1&quot;, &quot;Line 2&quot;), col=c(&quot;red&quot;, &quot;blue&quot;), lty=1:2, cex=0.8, box.lty=0) # Change the border make_plot() legend(1,20, legend=c(&quot;Line 1&quot;, &quot;Line 2&quot;), col=c(&quot;red&quot;, &quot;blue&quot;), lty=1:2, cex=0.8, box.lty=2, box.lwd=2, box.col=&quot;green&quot;) ====The legend position by keywords==== Using the following keywords : “bottomright”, “bottom”, “bottomleft”, “left”, “topleft”, “top”, “topright”, “right” and “center”. par(mfrow=c(2,1), mar=c(3,3,1,0)+.5, mgp=c(1.6,.6,0)) # set up the graphics # Remove legend border using box.lty = 0 make_plot() legend(&quot;center&quot;, legend=c(&quot;Line 1&quot;, &quot;Line 2&quot;), col=c(&quot;red&quot;, &quot;blue&quot;),box.lty=0) make_plot() legend(&quot;topright&quot;, legend=c(&quot;Line 1&quot;, &quot;Line 2&quot;), col=c(&quot;red&quot;, &quot;blue&quot;), box.lty=0) Text: text() and mtext() R functions can be used To add a text to a plot. ====Texts within the graph==== Formula: text(x, y, labels) Example: d&lt;-head(mtcars) plot(d[,&#39;wt&#39;], d[,&#39;mpg&#39;], main=&quot;Milage vs. Car Weight\\n~~~~~~~~~~~~~~~~~~~&quot;, xlab=&quot;Weight&quot;, ylab=&quot;Miles/(US) gallon&quot;, pch=19, col=&quot;darkgreen&quot;) text(d[,&#39;wt&#39;], d[,&#39;mpg&#39;], row.names(d), cex=0.85, pos=2,col=&quot;red&quot;) ====Text in the margins of the graph==== text : the text to be written side : an integer specifying the side of the plot; Possible values are : 1: bottom 2: left 3: top 4: right plot(1:7, 1:7, main=&quot;mtext(...) examples&quot;,col=&quot;blue&quot;) mtext(&quot;Magic function&quot;, side=4) ====Mathematical annotation within the graph==== Example: plot(1:7, 1:7, main=&quot;text(...) examples&quot;,col=&quot;black&quot;) text(2, 4, expression(hat(beta) == (X^t * X)^{-1} * X^t * y)) text(2, 6, expression(bar(x) == sum(frac(x[i], n), i==1, n))) Types of Plot: An option for plot types can be: type: * “p” for points, * &quot;l&quot; for lines, * &quot;b&quot; for both, * &quot;c&quot; for the lines part alone of &quot;b&quot;, * &quot;o&quot; for both &#39;overplotted&#39;, * &quot;h&quot; for &#39;histogram&#39; like (or &#39;high-density&#39;) vertical lines, * &quot;s&quot; for stair steps, * &quot;S&quot; for other steps, see &#39;Details&#39; below, * &quot;n&quot; for no plotting. x &lt;- rnorm(100) par(mfrow = c(2,2)) plot(x, type = &quot;p&quot;, main = &quot;points&quot;, ylab = &quot;&quot;, xlab = &quot;&quot;,col=&quot;red&quot;) plot(x, type = &quot;o&quot;, main = &quot;overplotted&quot;, ylab = &quot;&quot;, xlab = &quot;&quot;,col=&quot;green&quot;) plot(x, type = &quot;h&quot;, main = &quot;histogram&quot;, ylab = &quot;&quot;, xlab = &quot;&quot;,col=&quot;blue&quot;) plot(x, type = &quot;S&quot;, main = &quot;steps&quot;, ylab = &quot;&quot;, xlab = &quot;&quot;,col=&quot;orange&quot;) Axis: ====Add an axis to a plot==== Formula: axis(side, at=NULL, labels=TRUE) Side : 1: below 2: left 3: above 4: right at: The position labels: Texts for tick-mark labels. Example : par(mfrow=c(3,1), mar=c(3,3,1,0)+.5, mgp=c(1.6,.6,0)) # set up the graphics x&lt;-1:3; y=x*x # Example 1 plot(x, y, axes = FALSE) axis(side=1, at = 1:3, labels=LETTERS[1:3]) axis(2) # Example 2 plot(x, y, axes = FALSE) axis(side=1, at=1:3, labels=LETTERS[1:3]) axis(2) box() #- To make it look like &quot;usual&quot; plot #Example3: plot(x, y, pch=18, col=&quot;red&quot;, type=&quot;b&quot;, frame=FALSE, xaxt=&quot;n&quot;) # Remove x axis axis(1, 1:4, LETTERS[1:4], col.axis=&quot;blue&quot;) axis(3, col = &quot;darkgreen&quot;, lty = 2, lwd = 0.5) axis(4, col = &quot;violet&quot;, col.axis = &quot;dark violet&quot;, lwd = 2) ====Axis scale==== xlim: the limit of x axis; format : xlim = c(min, max) ylim: the limit of y axis; format: ylim = c(min, max) Transformation to log scale: log = “x” log = “y” log = “xy”* Example: par(mfrow=c(3,1), mar=c(3,3,1,0)+.5, mgp=c(1.6,.6,0)) # set up the graphics x&lt;-1:20; y=x*x # Simple graph plot(x, y,col=&quot;blue&quot;) # Enlarge the scale plot(x, y, xlim=c(1,15), ylim=c(1,150),col=&quot;blue&quot;) # Log scale plot(x, y, log=&quot;y&quot;,col=&quot;blue&quot;) ====Axes fonts==== Remove them with axes=FALSE: par(mfrow=c(2,1), mar=c(3,3,1,0)+.5, mgp=c(1.6,.6,0)) # set up the graphics x1&lt;-1:10 x2&lt;-11:20 plot(x1,x2,axes=FALSE) plot(x1,x2,axes=FALSE) axis(1,col=&quot;red&quot;,col.axis=&quot;blue&quot;,font.axis=3) axis(2,col=&quot;red&quot;,col.axis=&quot;blue&quot;,font.axis=2,las=2) ====Axes positions==== Use las function to specified the style of axis labels: 0 : always parallel to the axis [default] 1 : always horizontal 2 : always perpendicular to the axis 3 : always vertical x1 &lt;- rnorm(150) par(mfrow = c(2,2)) plot(x1, las = 0, main = &quot;las = 0&quot;, sub = &quot;always parallel to the axis&quot;, xlab = &quot;&quot;, ylab = &quot;&quot;,col=&quot;blue&quot;) plot(x1, las = 1, main = &quot;las = 1&quot;, sub = &quot;always horizontal&quot;, xlab = &quot;&quot;, ylab = &quot;&quot;,col=&quot;blue&quot;) plot(x1, las = 2, main = &quot;las = 2&quot;, sub = &quot;always perpendicular to the axis&quot;, xlab = &quot;&quot;, ylab = &quot;&quot;,col=&quot;blue&quot;) plot(x1, las = 3, main = &quot;las = 3&quot;, sub = &quot;always vertical&quot;, xlab = &quot;&quot;, ylab = &quot;&quot;,col=&quot;blue&quot;) Margins par(): Formula: par(mfrow=c(2,1), mar=c(3,3,1,0)+.5, mgp=c(1.6,.6,0)) # set up the graphics See ?par to learn more about the topic. Colors: Use by name (e.g col = “red”) or as a hexadecimal RGB triplet (such as col = “#FFCC00”). ====Default color in R==== colors() # list the r colors ## [1] &quot;white&quot; &quot;aliceblue&quot; &quot;antiquewhite&quot; ## [4] &quot;antiquewhite1&quot; &quot;antiquewhite2&quot; &quot;antiquewhite3&quot; ## [7] &quot;antiquewhite4&quot; &quot;aquamarine&quot; &quot;aquamarine1&quot; ## [10] &quot;aquamarine2&quot; &quot;aquamarine3&quot; &quot;aquamarine4&quot; ## [13] &quot;azure&quot; &quot;azure1&quot; &quot;azure2&quot; ## [16] &quot;azure3&quot; &quot;azure4&quot; &quot;beige&quot; ## [19] &quot;bisque&quot; &quot;bisque1&quot; &quot;bisque2&quot; ## [22] &quot;bisque3&quot; &quot;bisque4&quot; &quot;black&quot; ## [25] &quot;blanchedalmond&quot; &quot;blue&quot; &quot;blue1&quot; ## [28] &quot;blue2&quot; &quot;blue3&quot; &quot;blue4&quot; ## [31] &quot;blueviolet&quot; &quot;brown&quot; &quot;brown1&quot; ## [34] &quot;brown2&quot; &quot;brown3&quot; &quot;brown4&quot; ## [37] &quot;burlywood&quot; &quot;burlywood1&quot; &quot;burlywood2&quot; ## [40] &quot;burlywood3&quot; &quot;burlywood4&quot; &quot;cadetblue&quot; ## [43] &quot;cadetblue1&quot; &quot;cadetblue2&quot; &quot;cadetblue3&quot; ## [46] &quot;cadetblue4&quot; &quot;chartreuse&quot; &quot;chartreuse1&quot; ## [49] &quot;chartreuse2&quot; &quot;chartreuse3&quot; &quot;chartreuse4&quot; ## [52] &quot;chocolate&quot; &quot;chocolate1&quot; &quot;chocolate2&quot; ## [55] &quot;chocolate3&quot; &quot;chocolate4&quot; &quot;coral&quot; ## [58] &quot;coral1&quot; &quot;coral2&quot; &quot;coral3&quot; ## [61] &quot;coral4&quot; &quot;cornflowerblue&quot; &quot;cornsilk&quot; ## [64] &quot;cornsilk1&quot; &quot;cornsilk2&quot; &quot;cornsilk3&quot; ## [67] &quot;cornsilk4&quot; &quot;cyan&quot; &quot;cyan1&quot; ## [70] &quot;cyan2&quot; &quot;cyan3&quot; &quot;cyan4&quot; ## [73] &quot;darkblue&quot; &quot;darkcyan&quot; &quot;darkgoldenrod&quot; ## [76] &quot;darkgoldenrod1&quot; &quot;darkgoldenrod2&quot; &quot;darkgoldenrod3&quot; ## [79] &quot;darkgoldenrod4&quot; &quot;darkgray&quot; &quot;darkgreen&quot; ## [82] &quot;darkgrey&quot; &quot;darkkhaki&quot; &quot;darkmagenta&quot; ## [85] &quot;darkolivegreen&quot; &quot;darkolivegreen1&quot; &quot;darkolivegreen2&quot; ## [88] &quot;darkolivegreen3&quot; &quot;darkolivegreen4&quot; &quot;darkorange&quot; ## [91] &quot;darkorange1&quot; &quot;darkorange2&quot; &quot;darkorange3&quot; ## [94] &quot;darkorange4&quot; &quot;darkorchid&quot; &quot;darkorchid1&quot; ## [97] &quot;darkorchid2&quot; &quot;darkorchid3&quot; &quot;darkorchid4&quot; ## [100] &quot;darkred&quot; &quot;darksalmon&quot; &quot;darkseagreen&quot; ## [103] &quot;darkseagreen1&quot; &quot;darkseagreen2&quot; &quot;darkseagreen3&quot; ## [106] &quot;darkseagreen4&quot; &quot;darkslateblue&quot; &quot;darkslategray&quot; ## [109] &quot;darkslategray1&quot; &quot;darkslategray2&quot; &quot;darkslategray3&quot; ## [112] &quot;darkslategray4&quot; &quot;darkslategrey&quot; &quot;darkturquoise&quot; ## [115] &quot;darkviolet&quot; &quot;deeppink&quot; &quot;deeppink1&quot; ## [118] &quot;deeppink2&quot; &quot;deeppink3&quot; &quot;deeppink4&quot; ## [121] &quot;deepskyblue&quot; &quot;deepskyblue1&quot; &quot;deepskyblue2&quot; ## [124] &quot;deepskyblue3&quot; &quot;deepskyblue4&quot; &quot;dimgray&quot; ## [127] &quot;dimgrey&quot; &quot;dodgerblue&quot; &quot;dodgerblue1&quot; ## [130] &quot;dodgerblue2&quot; &quot;dodgerblue3&quot; &quot;dodgerblue4&quot; ## [133] &quot;firebrick&quot; &quot;firebrick1&quot; &quot;firebrick2&quot; ## [136] &quot;firebrick3&quot; &quot;firebrick4&quot; &quot;floralwhite&quot; ## [139] &quot;forestgreen&quot; &quot;gainsboro&quot; &quot;ghostwhite&quot; ## [142] &quot;gold&quot; &quot;gold1&quot; &quot;gold2&quot; ## [145] &quot;gold3&quot; &quot;gold4&quot; &quot;goldenrod&quot; ## [148] &quot;goldenrod1&quot; &quot;goldenrod2&quot; &quot;goldenrod3&quot; ## [151] &quot;goldenrod4&quot; &quot;gray&quot; &quot;gray0&quot; ## [154] &quot;gray1&quot; &quot;gray2&quot; &quot;gray3&quot; ## [157] &quot;gray4&quot; &quot;gray5&quot; &quot;gray6&quot; ## [160] &quot;gray7&quot; &quot;gray8&quot; &quot;gray9&quot; ## [163] &quot;gray10&quot; &quot;gray11&quot; &quot;gray12&quot; ## [166] &quot;gray13&quot; &quot;gray14&quot; &quot;gray15&quot; ## [169] &quot;gray16&quot; &quot;gray17&quot; &quot;gray18&quot; ## [172] &quot;gray19&quot; &quot;gray20&quot; &quot;gray21&quot; ## [175] &quot;gray22&quot; &quot;gray23&quot; &quot;gray24&quot; ## [178] &quot;gray25&quot; &quot;gray26&quot; &quot;gray27&quot; ## [181] &quot;gray28&quot; &quot;gray29&quot; &quot;gray30&quot; ## [184] &quot;gray31&quot; &quot;gray32&quot; &quot;gray33&quot; ## [187] &quot;gray34&quot; &quot;gray35&quot; &quot;gray36&quot; ## [190] &quot;gray37&quot; &quot;gray38&quot; &quot;gray39&quot; ## [193] &quot;gray40&quot; &quot;gray41&quot; &quot;gray42&quot; ## [196] &quot;gray43&quot; &quot;gray44&quot; &quot;gray45&quot; ## [199] &quot;gray46&quot; &quot;gray47&quot; &quot;gray48&quot; ## [202] &quot;gray49&quot; &quot;gray50&quot; &quot;gray51&quot; ## [205] &quot;gray52&quot; &quot;gray53&quot; &quot;gray54&quot; ## [208] &quot;gray55&quot; &quot;gray56&quot; &quot;gray57&quot; ## [211] &quot;gray58&quot; &quot;gray59&quot; &quot;gray60&quot; ## [214] &quot;gray61&quot; &quot;gray62&quot; &quot;gray63&quot; ## [217] &quot;gray64&quot; &quot;gray65&quot; &quot;gray66&quot; ## [220] &quot;gray67&quot; &quot;gray68&quot; &quot;gray69&quot; ## [223] &quot;gray70&quot; &quot;gray71&quot; &quot;gray72&quot; ## [226] &quot;gray73&quot; &quot;gray74&quot; &quot;gray75&quot; ## [229] &quot;gray76&quot; &quot;gray77&quot; &quot;gray78&quot; ## [232] &quot;gray79&quot; &quot;gray80&quot; &quot;gray81&quot; ## [235] &quot;gray82&quot; &quot;gray83&quot; &quot;gray84&quot; ## [238] &quot;gray85&quot; &quot;gray86&quot; &quot;gray87&quot; ## [241] &quot;gray88&quot; &quot;gray89&quot; &quot;gray90&quot; ## [244] &quot;gray91&quot; &quot;gray92&quot; &quot;gray93&quot; ## [247] &quot;gray94&quot; &quot;gray95&quot; &quot;gray96&quot; ## [250] &quot;gray97&quot; &quot;gray98&quot; &quot;gray99&quot; ## [253] &quot;gray100&quot; &quot;green&quot; &quot;green1&quot; ## [256] &quot;green2&quot; &quot;green3&quot; &quot;green4&quot; ## [259] &quot;greenyellow&quot; &quot;grey&quot; &quot;grey0&quot; ## [262] &quot;grey1&quot; &quot;grey2&quot; &quot;grey3&quot; ## [265] &quot;grey4&quot; &quot;grey5&quot; &quot;grey6&quot; ## [268] &quot;grey7&quot; &quot;grey8&quot; &quot;grey9&quot; ## [271] &quot;grey10&quot; &quot;grey11&quot; &quot;grey12&quot; ## [274] &quot;grey13&quot; &quot;grey14&quot; &quot;grey15&quot; ## [277] &quot;grey16&quot; &quot;grey17&quot; &quot;grey18&quot; ## [280] &quot;grey19&quot; &quot;grey20&quot; &quot;grey21&quot; ## [283] &quot;grey22&quot; &quot;grey23&quot; &quot;grey24&quot; ## [286] &quot;grey25&quot; &quot;grey26&quot; &quot;grey27&quot; ## [289] &quot;grey28&quot; &quot;grey29&quot; &quot;grey30&quot; ## [292] &quot;grey31&quot; &quot;grey32&quot; &quot;grey33&quot; ## [295] &quot;grey34&quot; &quot;grey35&quot; &quot;grey36&quot; ## [298] &quot;grey37&quot; &quot;grey38&quot; &quot;grey39&quot; ## [301] &quot;grey40&quot; &quot;grey41&quot; &quot;grey42&quot; ## [304] &quot;grey43&quot; &quot;grey44&quot; &quot;grey45&quot; ## [307] &quot;grey46&quot; &quot;grey47&quot; &quot;grey48&quot; ## [310] &quot;grey49&quot; &quot;grey50&quot; &quot;grey51&quot; ## [313] &quot;grey52&quot; &quot;grey53&quot; &quot;grey54&quot; ## [316] &quot;grey55&quot; &quot;grey56&quot; &quot;grey57&quot; ## [319] &quot;grey58&quot; &quot;grey59&quot; &quot;grey60&quot; ## [322] &quot;grey61&quot; &quot;grey62&quot; &quot;grey63&quot; ## [325] &quot;grey64&quot; &quot;grey65&quot; &quot;grey66&quot; ## [328] &quot;grey67&quot; &quot;grey68&quot; &quot;grey69&quot; ## [331] &quot;grey70&quot; &quot;grey71&quot; &quot;grey72&quot; ## [334] &quot;grey73&quot; &quot;grey74&quot; &quot;grey75&quot; ## [337] &quot;grey76&quot; &quot;grey77&quot; &quot;grey78&quot; ## [340] &quot;grey79&quot; &quot;grey80&quot; &quot;grey81&quot; ## [343] &quot;grey82&quot; &quot;grey83&quot; &quot;grey84&quot; ## [346] &quot;grey85&quot; &quot;grey86&quot; &quot;grey87&quot; ## [349] &quot;grey88&quot; &quot;grey89&quot; &quot;grey90&quot; ## [352] &quot;grey91&quot; &quot;grey92&quot; &quot;grey93&quot; ## [355] &quot;grey94&quot; &quot;grey95&quot; &quot;grey96&quot; ## [358] &quot;grey97&quot; &quot;grey98&quot; &quot;grey99&quot; ## [361] &quot;grey100&quot; &quot;honeydew&quot; &quot;honeydew1&quot; ## [364] &quot;honeydew2&quot; &quot;honeydew3&quot; &quot;honeydew4&quot; ## [367] &quot;hotpink&quot; &quot;hotpink1&quot; &quot;hotpink2&quot; ## [370] &quot;hotpink3&quot; &quot;hotpink4&quot; &quot;indianred&quot; ## [373] &quot;indianred1&quot; &quot;indianred2&quot; &quot;indianred3&quot; ## [376] &quot;indianred4&quot; &quot;ivory&quot; &quot;ivory1&quot; ## [379] &quot;ivory2&quot; &quot;ivory3&quot; &quot;ivory4&quot; ## [382] &quot;khaki&quot; &quot;khaki1&quot; &quot;khaki2&quot; ## [385] &quot;khaki3&quot; &quot;khaki4&quot; &quot;lavender&quot; ## [388] &quot;lavenderblush&quot; &quot;lavenderblush1&quot; &quot;lavenderblush2&quot; ## [391] &quot;lavenderblush3&quot; &quot;lavenderblush4&quot; &quot;lawngreen&quot; ## [394] &quot;lemonchiffon&quot; &quot;lemonchiffon1&quot; &quot;lemonchiffon2&quot; ## [397] &quot;lemonchiffon3&quot; &quot;lemonchiffon4&quot; &quot;lightblue&quot; ## [400] &quot;lightblue1&quot; &quot;lightblue2&quot; &quot;lightblue3&quot; ## [403] &quot;lightblue4&quot; &quot;lightcoral&quot; &quot;lightcyan&quot; ## [406] &quot;lightcyan1&quot; &quot;lightcyan2&quot; &quot;lightcyan3&quot; ## [409] &quot;lightcyan4&quot; &quot;lightgoldenrod&quot; &quot;lightgoldenrod1&quot; ## [412] &quot;lightgoldenrod2&quot; &quot;lightgoldenrod3&quot; &quot;lightgoldenrod4&quot; ## [415] &quot;lightgoldenrodyellow&quot; &quot;lightgray&quot; &quot;lightgreen&quot; ## [418] &quot;lightgrey&quot; &quot;lightpink&quot; &quot;lightpink1&quot; ## [421] &quot;lightpink2&quot; &quot;lightpink3&quot; &quot;lightpink4&quot; ## [424] &quot;lightsalmon&quot; &quot;lightsalmon1&quot; &quot;lightsalmon2&quot; ## [427] &quot;lightsalmon3&quot; &quot;lightsalmon4&quot; &quot;lightseagreen&quot; ## [430] &quot;lightskyblue&quot; &quot;lightskyblue1&quot; &quot;lightskyblue2&quot; ## [433] &quot;lightskyblue3&quot; &quot;lightskyblue4&quot; &quot;lightslateblue&quot; ## [436] &quot;lightslategray&quot; &quot;lightslategrey&quot; &quot;lightsteelblue&quot; ## [439] &quot;lightsteelblue1&quot; &quot;lightsteelblue2&quot; &quot;lightsteelblue3&quot; ## [442] &quot;lightsteelblue4&quot; &quot;lightyellow&quot; &quot;lightyellow1&quot; ## [445] &quot;lightyellow2&quot; &quot;lightyellow3&quot; &quot;lightyellow4&quot; ## [448] &quot;limegreen&quot; &quot;linen&quot; &quot;magenta&quot; ## [451] &quot;magenta1&quot; &quot;magenta2&quot; &quot;magenta3&quot; ## [454] &quot;magenta4&quot; &quot;maroon&quot; &quot;maroon1&quot; ## [457] &quot;maroon2&quot; &quot;maroon3&quot; &quot;maroon4&quot; ## [460] &quot;mediumaquamarine&quot; &quot;mediumblue&quot; &quot;mediumorchid&quot; ## [463] &quot;mediumorchid1&quot; &quot;mediumorchid2&quot; &quot;mediumorchid3&quot; ## [466] &quot;mediumorchid4&quot; &quot;mediumpurple&quot; &quot;mediumpurple1&quot; ## [469] &quot;mediumpurple2&quot; &quot;mediumpurple3&quot; &quot;mediumpurple4&quot; ## [472] &quot;mediumseagreen&quot; &quot;mediumslateblue&quot; &quot;mediumspringgreen&quot; ## [475] &quot;mediumturquoise&quot; &quot;mediumvioletred&quot; &quot;midnightblue&quot; ## [478] &quot;mintcream&quot; &quot;mistyrose&quot; &quot;mistyrose1&quot; ## [481] &quot;mistyrose2&quot; &quot;mistyrose3&quot; &quot;mistyrose4&quot; ## [484] &quot;moccasin&quot; &quot;navajowhite&quot; &quot;navajowhite1&quot; ## [487] &quot;navajowhite2&quot; &quot;navajowhite3&quot; &quot;navajowhite4&quot; ## [490] &quot;navy&quot; &quot;navyblue&quot; &quot;oldlace&quot; ## [493] &quot;olivedrab&quot; &quot;olivedrab1&quot; &quot;olivedrab2&quot; ## [496] &quot;olivedrab3&quot; &quot;olivedrab4&quot; &quot;orange&quot; ## [499] &quot;orange1&quot; &quot;orange2&quot; &quot;orange3&quot; ## [502] &quot;orange4&quot; &quot;orangered&quot; &quot;orangered1&quot; ## [505] &quot;orangered2&quot; &quot;orangered3&quot; &quot;orangered4&quot; ## [508] &quot;orchid&quot; &quot;orchid1&quot; &quot;orchid2&quot; ## [511] &quot;orchid3&quot; &quot;orchid4&quot; &quot;palegoldenrod&quot; ## [514] &quot;palegreen&quot; &quot;palegreen1&quot; &quot;palegreen2&quot; ## [517] &quot;palegreen3&quot; &quot;palegreen4&quot; &quot;paleturquoise&quot; ## [520] &quot;paleturquoise1&quot; &quot;paleturquoise2&quot; &quot;paleturquoise3&quot; ## [523] &quot;paleturquoise4&quot; &quot;palevioletred&quot; &quot;palevioletred1&quot; ## [526] &quot;palevioletred2&quot; &quot;palevioletred3&quot; &quot;palevioletred4&quot; ## [529] &quot;papayawhip&quot; &quot;peachpuff&quot; &quot;peachpuff1&quot; ## [532] &quot;peachpuff2&quot; &quot;peachpuff3&quot; &quot;peachpuff4&quot; ## [535] &quot;peru&quot; &quot;pink&quot; &quot;pink1&quot; ## [538] &quot;pink2&quot; &quot;pink3&quot; &quot;pink4&quot; ## [541] &quot;plum&quot; &quot;plum1&quot; &quot;plum2&quot; ## [544] &quot;plum3&quot; &quot;plum4&quot; &quot;powderblue&quot; ## [547] &quot;purple&quot; &quot;purple1&quot; &quot;purple2&quot; ## [550] &quot;purple3&quot; &quot;purple4&quot; &quot;red&quot; ## [553] &quot;red1&quot; &quot;red2&quot; &quot;red3&quot; ## [556] &quot;red4&quot; &quot;rosybrown&quot; &quot;rosybrown1&quot; ## [559] &quot;rosybrown2&quot; &quot;rosybrown3&quot; &quot;rosybrown4&quot; ## [562] &quot;royalblue&quot; &quot;royalblue1&quot; &quot;royalblue2&quot; ## [565] &quot;royalblue3&quot; &quot;royalblue4&quot; &quot;saddlebrown&quot; ## [568] &quot;salmon&quot; &quot;salmon1&quot; &quot;salmon2&quot; ## [571] &quot;salmon3&quot; &quot;salmon4&quot; &quot;sandybrown&quot; ## [574] &quot;seagreen&quot; &quot;seagreen1&quot; &quot;seagreen2&quot; ## [577] &quot;seagreen3&quot; &quot;seagreen4&quot; &quot;seashell&quot; ## [580] &quot;seashell1&quot; &quot;seashell2&quot; &quot;seashell3&quot; ## [583] &quot;seashell4&quot; &quot;sienna&quot; &quot;sienna1&quot; ## [586] &quot;sienna2&quot; &quot;sienna3&quot; &quot;sienna4&quot; ## [589] &quot;skyblue&quot; &quot;skyblue1&quot; &quot;skyblue2&quot; ## [592] &quot;skyblue3&quot; &quot;skyblue4&quot; &quot;slateblue&quot; ## [595] &quot;slateblue1&quot; &quot;slateblue2&quot; &quot;slateblue3&quot; ## [598] &quot;slateblue4&quot; &quot;slategray&quot; &quot;slategray1&quot; ## [601] &quot;slategray2&quot; &quot;slategray3&quot; &quot;slategray4&quot; ## [604] &quot;slategrey&quot; &quot;snow&quot; &quot;snow1&quot; ## [607] &quot;snow2&quot; &quot;snow3&quot; &quot;snow4&quot; ## [610] &quot;springgreen&quot; &quot;springgreen1&quot; &quot;springgreen2&quot; ## [613] &quot;springgreen3&quot; &quot;springgreen4&quot; &quot;steelblue&quot; ## [616] &quot;steelblue1&quot; &quot;steelblue2&quot; &quot;steelblue3&quot; ## [619] &quot;steelblue4&quot; &quot;tan&quot; &quot;tan1&quot; ## [622] &quot;tan2&quot; &quot;tan3&quot; &quot;tan4&quot; ## [625] &quot;thistle&quot; &quot;thistle1&quot; &quot;thistle2&quot; ## [628] &quot;thistle3&quot; &quot;thistle4&quot; &quot;tomato&quot; ## [631] &quot;tomato1&quot; &quot;tomato2&quot; &quot;tomato3&quot; ## [634] &quot;tomato4&quot; &quot;turquoise&quot; &quot;turquoise1&quot; ## [637] &quot;turquoise2&quot; &quot;turquoise3&quot; &quot;turquoise4&quot; ## [640] &quot;violet&quot; &quot;violetred&quot; &quot;violetred1&quot; ## [643] &quot;violetred2&quot; &quot;violetred3&quot; &quot;violetred4&quot; ## [646] &quot;wheat&quot; &quot;wheat1&quot; &quot;wheat2&quot; ## [649] &quot;wheat3&quot; &quot;wheat4&quot; &quot;whitesmoke&quot; ## [652] &quot;yellow&quot; &quot;yellow1&quot; &quot;yellow2&quot; ## [655] &quot;yellow3&quot; &quot;yellow4&quot; &quot;yellowgreen&quot; More info about color scheme extractor code in R: Adobe Color (Adobe Kuler) Color Schema Designer Color Calculator Another products Points: Using pch=&quot;&quot;. It has values between 1 till 25 or a single character. par(mfrow=c(4,2), mar=c(3,3,1,0)+.5, mgp=c(1.6,.6,0)) # set up the graphics x1&lt;-rnorm(10) plot(x1, type = &quot;p&quot;, pch = 0) plot(x1, type = &quot;p&quot;, pch = 10) plot(x1, type = &quot;p&quot;, pch = 25) plot(x1, type = &quot;p&quot;, pch = &quot;a&quot;) plot(x1, type = &quot;p&quot;, pch = &quot;*&quot;) plot(x1[1:26], type = &quot;p&quot;, pch = 0:25) plot(x1[1:26], type = &quot;p&quot;, pch = letters) Lines: ====Line types in R : lty==== lty for changing the lines type and lwd to change line width. The argument is a string (“blank”, “solid”, “dashed”, “dotted”, “dotdash”, “longdash”, or “twodash”) or an integer (0=blank, 1=solid (default), 2=dashed, 3=dotted, 4=dotdash, 5=longdash, 6=twodash) #Line types #++++++++++++++++++++++++++++++++++++++++++++ generateRLineTypes&lt;-function(){ oldPar&lt;-par() par(font=2, mar=c(0,0,0,0)) plot(1, pch=&quot;&quot;, ylim=c(0,6), xlim=c(0,0.7), axes=FALSE,xlab=&quot;&quot;, ylab=&quot;&quot;) for(i in 0:6) lines(c(0.3,0.7), c(i,i), lty=i, lwd=3) text(rep(0.1,6), 0:6, labels=c(&quot;0.&#39;blank&#39;&quot;, &quot;1.&#39;solid&#39;&quot;, &quot;2.&#39;dashed&#39;&quot;, &quot;3.&#39;dotted&#39;&quot;, &quot;4.&#39;dotdash&#39;&quot;, &quot;5.&#39;longdash&#39;&quot;, &quot;6.&#39;twodash&#39;&quot;)) par(mar=oldPar$mar,font=oldPar$font ) } generateRLineTypes() Example: par(mfrow=c(3,3), mar=c(3,3,1,0)+.5, mgp=c(1.6,.6,0)) # set up the graphics x1&lt;-1:5 plot(x1, type = &quot;l&quot;, lty = &quot;blank&quot;) plot(x1, type = &quot;l&quot;, lty = &quot;solid&quot;) plot(x1, type = &quot;l&quot;, lty = &quot;dashed&quot;) plot(x1, type = &quot;l&quot;, lty = &quot;dotted&quot;) plot(x1, type = &quot;l&quot;, lty = &quot;dotdash&quot;) plot(x1, type = &quot;l&quot;, lty = &quot;longdash&quot;) plot(x1, type = &quot;l&quot;, lty = &quot;twodash&quot;) ====An additional lines() on a graph==== Example: x1&lt;-c(1,5,7,20) x2&lt;-1:10 plot(x1, type = &quot;l&quot;, lty = &quot;solid&quot;,col=&quot;blue&quot;) lines(x2, type = &quot;o&quot;, lty = &quot;dashed&quot;, col = &quot;red&quot;) ====Straight abline()==== abline() can be used to add vertical, horizontal or regression lines. Formula: abline(a=NULL, b=NULL, h=NULL, v=NULL, …) Vertical line: par(mfrow=c(1,3), mar=c(3,3,1,0)+.5, mgp=c(1.6,.6,0)) # set up the graphics #Example-1: Add one line plot(cars) abline(v=10, col=&quot;red&quot;) #Example-2: add 2 lines # change line colors, sizes and types plot(cars) abline(v=c(5,15), col=c(&quot;blue&quot;, &quot;blue&quot;), lty=c(1,2), lwd=c(1, 3)) #Example-3: set.seed(1234); mydata&lt;-rnorm(100) hist(mydata, col=&quot;lightblue&quot;) abline(v = mean(mydata), col=&quot;red&quot;, lwd=3, lty=2) Horizontal line: plot(cars,col=&quot;red&quot;) abline(h=80, col=&quot;green&quot;) Regression line: lm() function to fit linear model. par(mgp=c(2,1,0), mar=c(3,3,1,1)) # Fit regression line require(stats) reg&lt;-lm(dist ~ speed, data = cars) coeff=coefficients(reg) # equation of the line : eq = paste0(&quot;y = &quot;, round(coeff[2],1), &quot;*x &quot;, round(coeff[1],1)) # plot plot(cars, main=eq,col=&quot;blue&quot;) abline(reg, col=&quot;red&quot;) Boxes: bty specifies the box type. par(mfrow=c(4,2), mar=c(3,3,1,0)+.5, mgp=c(1.6,.6,0)) # set up the graphics x1&lt;-rnorm(50) plot(x1, bty = &quot;o&quot;) # the default plot(x1, bty = &quot;n&quot;) # no box plot(x1, bty = &quot;l&quot;) plot(x1, bty = &quot;7&quot;) plot(x1, bty = &quot;u&quot;) plot(x1, bty = &quot;c&quot;) plot(x1, bty = &quot;]&quot;) box(lty = &#39;1375&#39;, col = &#39;red&#39;) Grid: grid() adds a grid to the current graph. Example: x1&lt;-rnorm(100) plot(x1, col=&quot;#FF8100&quot;) grid() Background: Change the background color with par(bg=). Example: x1&lt;-rnorm(50) par(bg=&quot;whitesmoke&quot;) plot(x1, bty =&quot;o&quot;,col=&quot;red&quot;) # the default Overlaying plots: matplot() Example: N &lt;- 200 x1 &lt;- rnorm(N) x2 &lt;- rnorm(N) + x1 + 1 y &lt;- 1 + x1 + x2 + rnorm(N) mydat &lt;- data.frame(y,x1,x2) matplot(mydat[,2:3], pch = 1:2) Multiple plots: par() for display multiple figures mfrow = c(3,2) : 3 row x 2 column mfcol = c(3,2) : same with mfrow but another positions Example-1: par(mfrow = c(3,2)) plot(x1, type = &quot;n&quot;) plot(x1, type = &quot;p&quot;) plot(x1, type = &quot;l&quot;) plot(x1, type = &quot;h&quot;) plot(x1, type = &quot;s&quot;) plot(x1, type = &quot;S&quot;) Example-2: par(mfcol = c(3,2)) plot(x1, type = &quot;n&quot;) plot(x1, type = &quot;p&quot;) plot(x1, type = &quot;l&quot;) plot(x1, type = &quot;h&quot;) plot(x1, type = &quot;s&quot;) plot(x1, type = &quot;S&quot;) "],
["default-bar-plots-in-r.html", "Chapter 4 Default Bar plots in R", " Chapter 4 Default Bar plots in R Basic bar plots: par(mfrow=c(2,1), mar=c(3,3,1,0)+.5, mgp=c(1.6,.6,0)) x&lt;-c(1:5) barplot(x,col=&quot;#67E300&quot;) barplot(x,horiz=TRUE,col=&quot;#F16D95&quot;) Change group names: barplot(x, names.arg = c(&quot;1&quot;, &quot;2&quot;, &quot;3&quot;,&quot;4&quot;,&quot;5&quot;), col=&quot;lightblue&quot;) Change color: par(mfrow=c(2,2), mar=c(3,3,1,0)+.5, mgp=c(1.6,.6,0)) x&lt;-c(1:5) # Change border and fill color using one single color barplot(x, col = &quot;white&quot;, border = &quot;steelblue&quot;) # Change the color of border. # Use different colors for each group barplot(x, col = &quot;white&quot;, border = c(&quot;#999999&quot;, &quot;#E69F00&quot;, &quot;#56B4E9&quot;)) # Change fill color : single color barplot(x, col = &quot;steelblue&quot;) # Change fill color: multiple colors barplot(x, col = c(&quot;#999999&quot;, &quot;#E69F00&quot;, &quot;#56B4E9&quot;)) Change main title and axis labels: # Change axis titles # Change color (col = &quot;orange&quot;) and remove frame x&lt;-c(1:5) barplot(x, main = &quot;Number of 1 to 5&quot;, xlab = &quot;Number&quot;, ylab = &quot;Number&quot;, col=&quot;orange&quot;) Stacked bar plots: Example-1: barplot(VADeaths, col = c(&quot;lightblue&quot;, &quot;mistyrose&quot;, &quot;lightcyan&quot;, &quot;lavender&quot;, &quot;cornsilk&quot;), legend = rownames(VADeaths)) Stacked bar plots: Example-1: barplot(VADeaths, col = c(&quot;lightblue&quot;, &quot;mistyrose&quot;, &quot;lightcyan&quot;, &quot;lavender&quot;, &quot;cornsilk&quot;), legend = rownames(VADeaths)) Example-2: # Stacked Bar Plot with Colors and Legend counts &lt;- table(mtcars$vs, mtcars$gear) barplot(counts, main=&quot;Car Distribution by Gears and VS&quot;, xlab=&quot;Number of Gears&quot;, col=c(&quot;#FF7800&quot;,&quot;#5EC4CD&quot;), legend = rownames(counts)) Grouped bar plots: Example-1: barplot(VADeaths, col = c(&quot;lightblue&quot;, &quot;mistyrose&quot;, &quot;lightcyan&quot;, &quot;lavender&quot;, &quot;cornsilk&quot;), legend = rownames(VADeaths),beside = TRUE) Example-2: box.lty = 0: Remove the box around the legend cex = 0.8: legend text size # Define a set of colors my_colors &lt;- c(&quot;lightblue&quot;, &quot;mistyrose&quot;, &quot;lightcyan&quot;, &quot;lavender&quot;, &quot;cornsilk&quot;) # Bar plot barplot(VADeaths, col = my_colors, beside = TRUE) # Add legend legend(&quot;topleft&quot;, legend = rownames(VADeaths), fill = my_colors, box.lty = 0, cex = 0.8) Example-3: # Grouped Bar Plot counts &lt;- table(mtcars$vs, mtcars$gear) barplot(counts, main=&quot;Car Distribution by Gears and VS&quot;, xlab=&quot;Number of Gears&quot;, col=c(&quot;mistyrose&quot;,&quot;lightblue&quot;), legend = rownames(counts), beside=TRUE) Note: If you need more formatting, see the 3-Standard R graphs formatting. "],
["default-histogram-and-density-plots-in-r.html", "Chapter 5 Default Histogram and Density Plots in R", " Chapter 5 Default Histogram and Density Plots in R A Histogram is NOT a Bar Chart: Preference:https://www.edrawsoft.com/histogram-vs-bar-chart.php Histograms VS. Bar Charts A Histogram is NOT a Bar Chart Simple Histograms: x: a numeric vector breaks: breakpoints between histogram cells. # Simple Histogram par(mfrow=c(2,1), mar=c(3,3,1,0)+.5, mgp=c(1.6,.6,0)) hist(mtcars$mpg,col=&quot;mistyrose&quot;) hist(mtcars$mpg, breaks =30,col=&quot;pink&quot;) Colored Histogram: hist(mtcars$mpg, breaks=12, col=&quot;mistyrose&quot;) Add a Normal Curve: x &lt;- mtcars$mpg h&lt;-hist(x, breaks=10, col=&quot;mistyrose&quot;, xlab=&quot;Miles Per Gallon&quot;, main=&quot;Histogram with Normal Curve&quot;) xfit&lt;-seq(min(x),max(x),length=40) yfit&lt;-dnorm(xfit,mean=mean(x),sd=sd(x)) yfit &lt;- yfit*diff(h$mids[1:2])*length(x) lines(xfit, yfit, col=&quot;red&quot;, lwd=2) Density plots: density(): # The density data dens &lt;- density(mtcars$mpg) # plot density plot(dens, frame = FALSE, col = &quot;red&quot;, main = &quot;Density plot of mpg&quot;) Density plot using polygon(): plot(dens, frame = FALSE, col = &quot;lightblue&quot;, main = &quot;Density plot of mpg&quot;) polygon(dens, col = &quot;#70E500&quot;) Additional-&gt;Comparing density Plots: Example-1: #install.packages(&quot;sm&quot;) library(sm) ## Package &#39;sm&#39;, version 2.2-5.6: type help(sm) for summary information sm.density.compare(iris$Sepal.Length, iris$Species, xlab=&quot;Species&quot;) title(main=&quot;Distributions of Species&quot;) Example-2: x &lt;- seq(from = 110, to = 174, by = 0.5) y1 &lt;- dnorm(x, mean = 145, sd = 9) y2 &lt;- dnorm(x, mean = 138, sd = 8) plot(x, y1, type=&quot;l&quot;, lwd=2, col=&quot;mistyrose&quot;, main=&quot;Systolic Blood Pressure Before and After Treatment&quot;, xlab = &quot;Systolic Blood Pressure (mmHg)&quot;, ylab = &quot;Frequency&quot;, yaxt=&quot;n&quot;, xlim = c(110, 175), ylim = c(0, 0.05)) lines(x, y2) polygon(c(110,x,175),c(0,y2,0), col=&quot;green&quot;, border = &quot;orange&quot;) polygon(c(117,x,175),c(0,y1,0), col=&quot;lightblue&quot;, border = &quot;orange&quot;) ylab=c(seq(from=0, to=175, by=25)) y=c(seq(from=0, to=0.05, length.out = 8)) axis(2,at=y,labels=ylab, las=1) text(x = 120, y = 0.045, &quot;- Pre-Treatment BP&quot;, col = &quot;#0E51A7&quot;, cex = 0.9) text(x = 120, y = 0.04, &quot; - Post-Treatment BP&quot;, col = &quot;firebrick3&quot;, cex = 0.9) points(109, 0.0445, pch = 15, col = &quot;lightblue&quot;) points(109, 0.0395, pch = 15, col = &quot;lightblue&quot;) "],
["default-line-plots-in-r.html", "Chapter 6 Default Line Plots in R", " Chapter 6 Default Line Plots in R Note that the function lines() need a plot(). Basic line plots: Example-1: par(mfrow=c(2,1), mar=c(3,3,1,0)+.5, mgp=c(1.6,.6,0)) x &lt;- 1:10 y1 &lt;- x*x y2 &lt;- 3*y1 # Basic stair steps plot plot(x, y1, type = &quot;S&quot;,plot=&quot;pink&quot;) ## Warning in plot.window(...): &quot;plot&quot; is not a graphical parameter ## Warning in plot.xy(xy, type, ...): &quot;plot&quot; is not a graphical parameter ## Warning in axis(side = side, at = at, labels = labels, ...): &quot;plot&quot; is not ## a graphical parameter ## Warning in axis(side = side, at = at, labels = labels, ...): &quot;plot&quot; is not ## a graphical parameter ## Warning in box(...): &quot;plot&quot; is not a graphical parameter ## Warning in title(...): &quot;plot&quot; is not a graphical parameter # Points and line plot(x, y1, type = &quot;b&quot;, pch = 19, col = &quot;blue&quot;, xlab = &quot;x&quot;, ylab = &quot;y&quot;) Example-2: As functions for different types x &lt;- c(1:5); y &lt;- x*x # create example data par(pch=22, col=&quot;blue&quot;) # plotting symbol and color par(mfrow=c(2,4)) # all plots on one page opts = c(&quot;p&quot;,&quot;l&quot;,&quot;o&quot;,&quot;b&quot;,&quot;c&quot;,&quot;s&quot;,&quot;S&quot;,&quot;h&quot;) for(i in 1:length(opts)){ heading = paste(&quot;type=&quot;,opts[i]) plot(x, y, type=&quot;n&quot;, main=heading) lines(x, y, type=opts[i]) } Example-3: Plot the points type=“” x &lt;- c(1:5); y &lt;- x*x # create example data par(pch=22, col=&quot;#00AE68&quot;) # plotting symbol and color par(mfrow=c(2,4)) # all plots on one page opts = c(&quot;p&quot;,&quot;l&quot;,&quot;o&quot;,&quot;b&quot;,&quot;c&quot;,&quot;s&quot;,&quot;S&quot;,&quot;h&quot;) for(i in 1:length(opts)){ heading = paste(&quot;type=&quot;,opts[i]) plot(x, y, main=heading) lines(x, y, type=opts[i]) } Multiple lines plots: Example-1: # First line x &lt;- 1:10 y1 &lt;- (x*x) plot(x, y1, type = &quot;b&quot;, frame = FALSE, pch = 19, col = &quot;red&quot;, xlab = &quot;x&quot;, ylab = &quot;y&quot;) # A second line lines(x, y2, pch = 18, col = &quot;blue&quot;, type = &quot;b&quot;, lty = 2) # Add a legend to the plot legend(&quot;topleft&quot;, legend=c(&quot;Line 1&quot;, &quot;Line 2&quot;), col=c(&quot;red&quot;, &quot;blue&quot;), lty = 1:2, cex=0.8) Example-2: As functions for different types # Create Line Chart # convert factor to numeric for convenience Orange$Tree &lt;- as.numeric(Orange$Tree) ntrees &lt;- max(Orange$Tree) # get the range for the x and y axis xrange &lt;- range(Orange$age) yrange &lt;- range(Orange$circumference) # set up the plot plot(xrange, yrange, type=&quot;n&quot;, xlab=&quot;Age (days)&quot;, ylab=&quot;Circumference (mm)&quot; ) colors &lt;- rainbow(ntrees) linetype &lt;- c(1:ntrees) plotchar &lt;- seq(18,18+ntrees,1) # add lines for (i in 1:ntrees) { tree &lt;- subset(Orange, Tree==i) lines(tree$age, tree$circumference, type=&quot;b&quot;, lwd=1.5, lty=linetype[i], col=colors[i], pch=plotchar[i]) } # add a title and subtitle title(&quot;Tree Growth&quot;, &quot;example of line plot&quot;) # add a legend legend(xrange[1], yrange[2], 1:ntrees, cex=0.8, col=colors, pch=plotchar, lty=linetype, title=&quot;Tree&quot;) "],
["default-scatter-plots-in-r.html", "Chapter 7 Default Scatter Plots in R", " Chapter 7 Default Scatter Plots in R R base scatter plot: plot(): Example-1: par(mfrow=c(2,1), mar=c(3,3,1,0)+.5, mgp=c(1.6,.6,0)) x &lt;- mtcars$hp y &lt;- mtcars$mpg # Plot with main and axis titles # Change point shape (pch = 19) and remove frame. plot(x, y, main = &quot;Main title&quot;, xlab = &quot;X axis title&quot;, ylab = &quot;Y axis title&quot;, pch = 19, frame = FALSE,col=&quot;#FFC000&quot;) # Add regression line plot(x, y, main = &quot;Main title&quot;, xlab = &quot;X axis title&quot;, ylab = &quot;Y axis title&quot;, pch = 19, frame = FALSE,col=&quot;#7573D9&quot;) abline(lm(y ~ x, data = mtcars), col = &quot;blue&quot;) Example-2: x &lt;- mtcars$hp y &lt;- mtcars$mpg # Add loess fit plot(x, y, main = &quot;Main title&quot;, xlab = &quot;X axis title&quot;, ylab = &quot;Y axis title&quot;, pch = 19, frame = FALSE,col=&quot;red&quot;) lines(lowess(x, y), col = &quot;blue&quot;) Addtional-&gt;Enhanced scatter plots: The components of the plot contains: the points the regression line (in green) the smoothed conditional spread (in red dashed line) the non-parametric regression smooth (solid line, red) #install.packages(&quot;car&quot;) library(&quot;car&quot;) ## Loading required package: carData scatterplot(wt ~ mpg, data = mtcars) "],
["default-scatter-plot-matrices-in-r.html", "Chapter 8 Default Scatter Plot Matrices in R", " Chapter 8 Default Scatter Plot Matrices in R Scatter Plot Matrices: par(mfrow=c(2,1)) pairs(~mpg+disp+drat+wt,data=mtcars, main=&quot;Simple Scatterplot Matrix&quot;) pairs(~mpg+disp+drat+wt,data=mtcars,lower.panel = NULL, main=&quot;Simple Scatterplot Matrix&quot;) Color points by groups Scatter plots: my_col &lt;- c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;) pairs(iris[,1:4], pch = 19, cex = 0.5, col = my_col[iris$Species], lower.panel=NULL) Add correlations on the lower panels: # Correlation panel my_col &lt;- c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;) panel.cor &lt;- function(x, y){ usr &lt;- par(&quot;usr&quot;); on.exit(par(usr)) par(usr = c(0, 1, 0, 1)) r &lt;- round(cor(x, y), digits=2) txt &lt;- paste0(&quot;R = &quot;, r) cex.cor &lt;- 0.8/strwidth(txt) text(0.5, 0.5, txt, cex = cex.cor * r) } # Customize upper panel upper.panel&lt;-function(x, y){ points(x,y, pch = 19, col = my_col[iris$Species]) } # Create the plots pairs(iris[,1:4], lower.panel = panel.cor, upper.panel = upper.panel) Add correlations on the scatter plots: my_col &lt;- c(&quot;#00AFBB&quot;, &quot;#E7B800&quot;, &quot;#FC4E07&quot;) # Customize upper panel upper.panel&lt;-function(x, y){ points(x,y, pch=19, col=c(&quot;red&quot;, &quot;green3&quot;, &quot;blue&quot;)[iris$Species]) r &lt;- round(cor(x, y), digits=2) txt &lt;- paste0(&quot;R = &quot;, r) usr &lt;- par(&quot;usr&quot;); on.exit(par(usr)) par(usr = c(0, 1, 0, 1)) text(0.5, 0.9, txt) } pairs(iris[,1:4], lower.panel = NULL, upper.panel = upper.panel) Additional-&gt; the R package psych: #install.packages(&quot;psych&quot;) library(psych) ## ## Attaching package: &#39;psych&#39; ## The following object is masked from &#39;package:car&#39;: ## ## logit pairs.panels(iris[,-5], method = &quot;pearson&quot;, # correlation method hist.col = &quot;#52E932&quot;, density = TRUE, # show density plots ellipses = TRUE # show correlation ellipses ) "],
["strip-charts1-d-scatter-plots.html", "Chapter 9 Strip charts:1-D scatter plots", " Chapter 9 Strip charts:1-D scatter plots Formula: stripchart(x, data = NULL method = “overplot”, jitter = 0.1) x: the data from which the plots are to be produced. Allowed values are one or a list of numeric vector, each corresponding to a component plot. data: a data.frame (or list) from which the variables in x should be taken. Method: the method to be used to separate coincident points. Allowed values are one of “overplot”, “jitter” or “stack”. jitter: when method = “jitter” is used, jitter gives the amount of jittering applied. Example-1: # Plot len by dose stripchart(len ~ dose, data = ToothGrowth, pch = 19, frame = FALSE,col=&quot;orange&quot;) Example-2: # Vertical plot using method = &quot;jitter&quot; stripchart(len ~ dose, data = ToothGrowth, pch = 19, frame = FALSE, vertical = TRUE, method = &quot;jitter&quot;,col=&quot;blue&quot;) Example-3: # Change point shapes (pch) and colors by groups # add main title and axis labels stripchart(len ~ dose, data = ToothGrowth, frame = FALSE, vertical = TRUE, method = &quot;jitter&quot;, pch = c(21, 18, 16), col = c(&quot;#00BF32&quot;, &quot;#E69F00&quot;, &quot;#56B4E9&quot;), main = &quot;Length by dose&quot;, xlab = &quot;Dose&quot;, ylab = &quot;Length&quot;) "],
["default-dot-plots-in-r.html", "Chapter 10 Default Dot Plots in R", " Chapter 10 Default Dot Plots in R Formula: dotchart(x, labels = NULL, groups = NULL, gcolor = par(“fg”), color = par(“fg”)) Simple Dot Plots numeric vectors: Example-1: # Simple Dot Plot dotchart(mtcars$mpg,labels=row.names(mtcars),cex=.7, main=&quot;Gas Milage for Car Models&quot;, xlab=&quot;Miles Per Gallon&quot;) Example-2: # Plot and color by groups cyl grps &lt;- as.factor(mtcars$cyl) my_cols &lt;- c(&quot;#0776A0&quot;, &quot;#FFA100&quot;, &quot;#6E0069&quot;) dotchart(mtcars$mpg, labels = row.names(mtcars), groups = grps, gcolor = my_cols, color = my_cols[grps], cex = 0.6, pch = 19, xlab = &quot;mpg&quot;) Dot Plot matrix: dotchart(VADeaths, cex = 0.6, main = &quot;Death Rates in Virginia - 1940&quot;) "],
["default-pie-charts-in-r.html", "Chapter 11 Default Pie Charts in R", " Chapter 11 Default Pie Charts in R Formula: pie(x, labels = names(x), radius = 0.8) x: a vector of non-negative numerical quantities. The values in x are displayed as the areas of pie slices. labels: character strings giving names for the slices. radius: radius of the pie circle. If the character strings labeling the slices are long it may be necessary to use a smaller radius. Basic pie charts: -&gt; pie() Example-1: df &lt;- data.frame( group = c(&quot;Male&quot;, &quot;Female&quot;, &quot;Child&quot;), value = c(35, 45, 20) ) df ## group value ## 1 Male 35 ## 2 Female 45 ## 3 Child 20 pie(df$value, labels = df$group, radius = 1,col=c(&quot;#AA6F39&quot;,&quot;#2F4073&quot;,&quot;#2B823A&quot;)) Example-2: # Change colors pie(df$value, labels = df$group, radius = 1, col = c(&quot;#5CCDC9&quot;, &quot;#DB62C4&quot;, &quot;#FFED73&quot;)) Example-3: # Pie Chart with Percentages slices &lt;- c(10, 12, 4, 16, 8) lbls &lt;- c(&quot;US&quot;, &quot;UK&quot;, &quot;Australia&quot;, &quot;Germany&quot;, &quot;France&quot;) pct &lt;- round(slices/sum(slices)*100) lbls &lt;- paste(lbls, pct) # add percents to labels lbls &lt;- paste(lbls,&quot;%&quot;,sep=&quot;&quot;) # ad % to labels pie(slices,labels = lbls, col=rainbow(length(lbls)), main=&quot;Pie Chart of Countries&quot;) Example-4: # Pie Chart from data frame with Appended Sample Sizes mytable &lt;- table(iris$Species) lbls &lt;- paste(names(mytable), &quot;\\n&quot;, mytable, sep=&quot;&quot;) pie(mytable, labels = lbls, main=&quot;Pie Chart of Species\\n (with sample sizes)&quot;) "],
["default-box-plots-in-r.html", "Chapter 12 Default Box Plots in R", " Chapter 12 Default Box Plots in R Basic box plots: Example-1: # Boxplot of MPG by Car Cylinders boxplot(mpg~cyl,data=mtcars, main=&quot;Car Milage Data&quot;, xlab=&quot;Number of Cylinders&quot;, ylab=&quot;Miles Per Gallon&quot;,col=&quot;lightblue&quot;) Example-2: par(mfrow=c(2,2), mar=c(3,3,1,0)+.5, mgp=c(1.6,.6,0)) # Box plot of one variable boxplot(ToothGrowth$len,col=&quot;lightblue&quot;) # Box plots by groups (dose) # remove frame boxplot(len ~ dose, data = ToothGrowth, frame = FALSE,col=&quot;pink&quot;) # Horizontal box plots boxplot(len ~ dose, data = ToothGrowth, frame = FALSE, horizontal = TRUE,col=&quot;green&quot;) # Notched box plots boxplot(len ~ dose, data = ToothGrowth, frame = FALSE, notch = TRUE,col=&quot;#C861D3&quot;) Change group names: boxplot(ToothGrowth$len ~ ToothGrowth$dose, data = ToothGrowth, frame = FALSE, names = c(&quot;Dose 0.5&quot;, &quot;Dose 1&quot;, &quot;Dose 2&quot;),col=&quot;orange&quot;) Change color: par(mfrow=c(2,2), mar=c(3,3,1,0)+.5, mgp=c(1.6,.6,0)) # Change the color of border using one single color boxplot(len ~ dose, data = ToothGrowth, frame = FALSE, border = &quot;steelblue&quot;) # Change the color of border. # Use different colors for each group boxplot(len ~ dose, data = ToothGrowth, frame = FALSE, border = c(&quot;#999999&quot;, &quot;#E69F00&quot;, &quot;#56B4E9&quot;)) # Change fill color : single color boxplot(len ~ dose, data = ToothGrowth, frame = FALSE, col = &quot;steelblue&quot;) # Change fill color: multiple colors boxplot(len ~ dose, data = ToothGrowth, frame = FALSE, col = c(&quot;#999999&quot;, &quot;#E69F00&quot;, &quot;#56B4E9&quot;)) Multiple box plots: boxplot(len ~ supp*dose, data = ToothGrowth, col = c(&quot;white&quot;, &quot;steelblue&quot;), frame = FALSE) Main title and axis labels: # Change axis titles # Change color (col = &quot;gray&quot;) and remove frame # Create notched box plot boxplot(len ~ dose, data = ToothGrowth, main = &quot;Plot of length by dose&quot;, xlab = &quot;Dose (mg)&quot;, ylab = &quot;Length&quot;, col = &quot;lightgray&quot;, frame = FALSE) Notched Boxplot: # Notched Boxplot of Tooth Growth Against 2 Crossed Factors # boxes colored for ease of interpretation boxplot(len~supp*dose, data=ToothGrowth, notch=FALSE, col=(c(&quot;orange&quot;,&quot;darkgreen&quot;)), main=&quot;Tooth Growth&quot;, xlab=&quot;Suppliment and Dose&quot;) Additional box plots-&gt; vioplot function from vioplot package bagplot(x, y) function from aplpack package Example-1: # Violin Plots #install.packages(&quot;vioplot&quot;) library(vioplot) x1 &lt;- mtcars$mpg[mtcars$cyl==4] x2 &lt;- mtcars$mpg[mtcars$cyl==6] x3 &lt;- mtcars$mpg[mtcars$cyl==8] vioplot(x1, x2, x3, names=c(&quot;4 cyl&quot;, &quot;6 cyl&quot;, &quot;8 cyl&quot;), col=&quot;lightblue&quot;) title(&quot;Violin Plots of Miles Per Gallon&quot;) Example-2: # Example of a Bagplot #install.packages(&quot;aplpack&quot;) library(aplpack) ## Loading required package: tcltk attach(mtcars) bagplot(wt,mpg, xlab=&quot;Car Weight&quot;, ylab=&quot;Miles Per Gallon&quot;, main=&quot;Bagplot Example&quot;) "],
["qq-plots-quantile-quantile-plots.html", "Chapter 13 QQ-Plots: Quantile-Quantile Plots", " Chapter 13 QQ-Plots: Quantile-Quantile Plots qqnorm(): produces a normal QQ plot of the variable qqline(): adds a reference line qqnorm(ToothGrowth$len, pch = 1, frame = FALSE) qqline(ToothGrowth$len, col = &quot;orange&quot;, lwd = 2) Additional -&gt; qqPlot() in car package: #install.packages(&quot;car&quot;) library(&quot;car&quot;) qqPlot(ToothGrowth$len,col=&quot;red&quot;) ## [1] 23 1 "],
["means-and-confidence-intervals.html", "Chapter 14 Means and Confidence Intervals", " Chapter 14 Means and Confidence Intervals With plotmeans() function from gplots package #install.packages(&quot;gplots&quot;) library(gplots) ## ## Attaching package: &#39;gplots&#39; ## The following object is masked from &#39;package:stats&#39;: ## ## lowess # Plot the mean of teeth length by dose groups plotmeans(len ~ dose, data = ToothGrowth, frame = FALSE) ## Warning in plot.xy(xy.coords(x, y), type = type, ...): &quot;frame&quot; is not a ## graphical parameter ## Warning in axis(1, at = 1:length(means), labels = legends, ...): &quot;frame&quot; is ## not a graphical parameter ## Warning in plot.xy(xy.coords(x, y), type = type, ...): &quot;frame&quot; is not a ## graphical parameter "]
]
